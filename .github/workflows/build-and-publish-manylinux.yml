name: Build and Publish Manylinux Wheels

on:
  push:
    tags:
      - 'v*-manylinux'  # Use specific tags for manylinux builds

jobs:
  build-wheels:
    name: Build wheels on manylinux
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build wheels in manylinux2014 container
      run: |
        docker run --rm -e PLAT=manylinux2014_x86_64 -v `pwd`:/io quay.io/pypa/manylinux2014_x86_64 /bin/bash -c "
          # Install build dependencies
          yum install -y cmake3 || yum install -y cmake
          
          # Install pybind11 globally
          cd /tmp
          git clone https://github.com/pybind/pybind11.git
          cd pybind11
          mkdir build && cd build
          cmake .. -DPYBIND11_TEST=OFF
          make -j4
          make install
          cd /
          
          # Build wheels for Python 3.10, 3.11, 3.12
          for PYBIN in /opt/python/cp310-cp310/bin /opt/python/cp311-cp311/bin /opt/python/cp312-cp312/bin; do
            echo Building for \$PYBIN
            \${PYBIN}/pip install numpy wheel setuptools
            cd /io
            \${PYBIN}/python setup.py bdist_wheel
          done
          
          # Bundle external shared libraries into the wheels
          for whl in dist/*.whl; do
            echo Repairing \$whl
            auditwheel show \$whl || true
            auditwheel repair \$whl -w /io/wheelhouse/ || cp \$whl /io/wheelhouse/
          done
        "
    
    - name: Build source distribution
      run: |
        pip install build
        python -m build --sdist

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          wheelhouse/*.whl
          dist/*.tar.gz

  publish-to-pypi:
    name: Publish to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true