name: Build and Publish Ubuntu Package

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential can-utils net-tools
        
    - name: Install pybind11 globally
      run: |
        git clone https://github.com/pybind/pybind11.git
        cd pybind11
        mkdir build && cd build
        cmake .. -DPYBIND11_TEST=OFF
        make -j4
        sudo make install

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel numpy pybind11 build twine

    - name: Build Python modules locally
      run: |
        cd vassar_arx_r5_sdk/bimanual
        ./build.sh
        # Check if api directory was created
        ls -la api/ || echo "No api directory created"
        # Find all built modules
        find . -name "*.cpython*.so" -o -name "arx_r5_python.so" -o -name "kinematic_solver.so" | head -20

    - name: Build distribution using existing setup.py
      run: |
        # Just use the existing setup.py
        python setup.py sdist bdist_wheel

    - name: Check distribution
      run: |
        ls -la dist/
        # Test that we can install the package
        pip install dist/*.whl
        # Check what was installed
        python -c "import vassar_arx_r5_sdk; print(vassar_arx_r5_sdk.__file__)"
        find $(python -c "import vassar_arx_r5_sdk; print(vassar_arx_r5_sdk.__path__[0])") -name "*.so" | head -20

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true