name: Build and Publish Ubuntu Wheels

on:
  push:
    tags:
      - 'v*'

jobs:
  build-wheels:
    name: Build wheels on Ubuntu ${{ matrix.ubuntu-version }} - Python ${{ matrix.python-version }}
    runs-on: ubuntu-${{ matrix.ubuntu-version }}
    strategy:
      matrix:
        ubuntu-version: ['22.04']  # Use 22.04 as base, it's compatible with 24.04
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential can-utils net-tools
        
    - name: Install pybind11 globally
      run: |
        git clone https://github.com/pybind/pybind11.git
        cd pybind11
        mkdir build && cd build
        cmake .. -DPYBIND11_TEST=OFF
        make -j4
        sudo make install

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel numpy pybind11 build

    - name: Build wheel
      run: |
        python -m build --wheel

    - name: Test import
      run: |
        # Install the wheel
        pip install dist/*.whl
        # Test import
        python -c "import vassar_arx_r5_sdk; print('Import successful!')"
        # Run basic tests
        cd /tmp  # Change directory to avoid importing from source
        python -c "from vassar_arx_r5_sdk.bimanual.script import single_arm; print('Module structure OK')"

    - uses: actions/upload-artifact@v4
      with:
        name: wheels-py${{ matrix.python-version }}
        path: ./dist/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build sdist
      run: python -m build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - name: List distributions
      run: ls -la dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true